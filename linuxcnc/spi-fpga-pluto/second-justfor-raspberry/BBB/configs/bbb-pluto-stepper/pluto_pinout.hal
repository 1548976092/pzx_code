# first load the core RT modules that will be needed
# kinematics
loadrt trivkins
# motion controller, get name and thread periods from ini file
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[TRAJ]AXES

#loadrt pluto_step speedrange=0 TOF=pluto_stepper_opendrain
loadrt pluto_step_rpspi
addf pluto-step-rpspi.transfer servo-thread
addf motion-command-handler servo-thread
addf motion-controller servo-thread

setp pluto-step-rpspi.stepgen.0.scale [AXIS_0]SCALE
setp pluto-step-rpspi.stepgen.1.scale [AXIS_1]SCALE
setp pluto-step-rpspi.stepgen.2.scale [AXIS_2]SCALE

setp pluto-step-rpspi.stepgen.step-polarity 1

net Xpos-cmd axis.0.motor-pos-cmd => pluto-step-rpspi.stepgen.0.position-cmd
net Ypos-cmd axis.1.motor-pos-cmd => pluto-step-rpspi.stepgen.1.position-cmd
net Zpos-cmd axis.2.motor-pos-cmd => pluto-step-rpspi.stepgen.2.position-cmd

net Xpos-fb pluto-step-rpspi.stepgen.0.position-fb => axis.0.motor-pos-fb
net Ypos-fb pluto-step-rpspi.stepgen.1.position-fb => axis.1.motor-pos-fb
net Zpos-fb pluto-step-rpspi.stepgen.2.position-fb => axis.2.motor-pos-fb

net Xen axis.0.amp-enable-out => pluto-step-rpspi.stepgen.0.enable pluto-step-rpspi.dout.00
net Yen axis.1.amp-enable-out => pluto-step-rpspi.stepgen.1.enable
net Zen axis.2.amp-enable-out => pluto-step-rpspi.stepgen.2.enable

# create a signal for the estop loopback
net estop-loop iocontrol.0.user-enable-out iocontrol.0.emc-enable-in

# create signals for tool prepare loopback
net tool-prep-loop iocontrol.0.tool-prepare iocontrol.0.tool-prepared

# create a signal for "spindle on"
#net spindle_on motion.spindle-on => pluto-step-rpspi.dout.00

setp pluto-step-rpspi.stepgen.steplen 5000
setp pluto-step-rpspi.stepgen.stepspace 25000
setp pluto-step-rpspi.stepgen.dirtime 10000


net XHome pluto-step-rpspi.din.08-not => axis.0.home-sw-in axis.0.pos-lim-sw-in
